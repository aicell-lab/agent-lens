[tool:pytest]
asyncio_mode = auto
filterwarnings = 
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::RuntimeWarning:asyncio
    ignore:.*Task was destroyed but it is pending.*:RuntimeWarning
    ignore:.*coroutine.*was never awaited.*:RuntimeWarning
    ignore:.*I/O operation on closed file.*:ValueError
    ignore:.*The event_loop fixture provided by pytest-asyncio has been redefined.*:DeprecationWarning
    ignore::asyncio.exceptions.CancelledError
    ignore:.*CancelledError.*:asyncio.exceptions.CancelledError

# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, real connections)
    slow: Slow tests (AI models, large datasets)
    frontend: Frontend service tests

# Timeout settings
timeout = 300
timeout_method = thread

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage settings
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --continue-on-collection-errors 